{
  "model_version": {
    "name": "andre.ml_models.sklearn_wine_best",
    "version": "3",
    "creation_timestamp": 1702945580706,
    "last_updated_timestamp": 1703290186679,
    "user_id": "andre@mycompany.com",
    "description": "Latest sklearn_wine_best ",
    "source": "dbfs:/databricks/mlflow-tracking/701e00c86d4541c8a68df2874e8517f7/417a027fa09b40c8a5e412e2d3b6a9ae/artifacts/model",
    "run_id": "417a027fa09b40c8a5e412e2d3b6a9ae",
    "run_tracking_server_id": "2556758628403379",
    "status": "READY",
    "storage_location": "s3://databricks-e2demofieldengwest/b169b504-4c54-49f2-bc3a-adf4b128f36d/models/07ed8e06-e5d4-4015-85f7-3ac30b09a5d0/versions/58a4f440-31d1-4b9f-a1f7-538b86e83ac5",
    "aliases": [
      {
        "alias": "champ2",
        "version": "3"
      }
    ],
    "tags": {
      "info": "2023-12-18"
    },
    "_creation_timestamp": "2023-12-19 00:26:21",
    "_last_updated_timestamp": "2023-12-23 00:09:47",
    "_is_unity_catalog": true,
    "_reg_model_download_uri": "s3://databricks-e2demofieldengwest/b169b504-4c54-49f2-bc3a-adf4b128f36d/models/07ed8e06-e5d4-4015-85f7-3ac30b09a5d0/versions/58a4f440-31d1-4b9f-a1f7-538b86e83ac5",
    "_run_model_download_uri": "dbfs:/databricks/mlflow-tracking/701e00c86d4541c8a68df2874e8517f7/417a027fa09b40c8a5e412e2d3b6a9ae/artifacts/model",
    "_web_ui_link": "https://e2-demo-west.cloud.databricks.com/explore/data/models/andre.ml_models.sklearn_wine_best/version/3",
    "_api_link": "https://e2-demo-west.cloud.databricks.com/api/2.0/mlflow/unity-catalog/model-versions/get?name=andre.ml_models.sklearn_wine_best&version=3"
  },
  "mlflow_model": {
    "artifact_path": "model",
    "databricks_runtime": "14.2.x-gpu-ml-scala2.12",
    "flavors": {
      "python_function": {
        "env": {
          "conda": "conda.yaml",
          "virtualenv": "python_env.yaml"
        },
        "loader_module": "mlflow.sklearn",
        "model_path": "model.pkl",
        "predict_fn": "predict",
        "python_version": "3.10.12"
      },
      "sklearn": {
        "code": null,
        "pickled_model": "model.pkl",
        "serialization_format": "cloudpickle",
        "sklearn_version": "1.1.1"
      }
    },
    "mlflow_version": "2.8.0",
    "model_size_bytes": 103958,
    "model_uuid": "46aec4f79d824046b492de49d835fd54",
    "run_id": "417a027fa09b40c8a5e412e2d3b6a9ae",
    "saved_input_example_info": {
      "artifact_path": "input_example.json",
      "pandas_orient": "split",
      "type": "dataframe"
    },
    "signature": {
      "inputs": [
        {
          "type": "double",
          "name": "fixed_acidity"
        },
        {
          "type": "double",
          "name": "volatile_acidity"
        },
        {
          "type": "double",
          "name": "citric_acid"
        },
        {
          "type": "double",
          "name": "residual_sugar"
        },
        {
          "type": "double",
          "name": "chlorides"
        },
        {
          "type": "double",
          "name": "free_sulfur_dioxide"
        },
        {
          "type": "double",
          "name": "total_sulfur_dioxide"
        },
        {
          "type": "double",
          "name": "density"
        },
        {
          "type": "double",
          "name": "pH"
        },
        {
          "type": "double",
          "name": "sulphates"
        },
        {
          "type": "double",
          "name": "alcohol"
        }
      ],
      "outputs": [
        {
          "type": "tensor",
          "tensor-spec": {
            "dtype": "float64",
            "shape": [
              -1
            ]
          }
        }
      ],
      "params": null
    },
    "utc_time_created": "2023-12-19 00:26:14.030243"
  },
  "registered_model": {
    "name": "andre.ml_models.sklearn_wine_best",
    "creation_timestamp": 1691761329476,
    "last_updated_timestamp": 1702945580709,
    "user_id": "andre@mycompany.com",
    "description": "Best sklearn_wine registered model",
    "aliases": [
      {
        "alias": "champ",
        "version": "1"
      },
      {
        "alias": "champ2",
        "version": "3"
      },
      {
        "alias": "prod",
        "version": "1"
      }
    ],
    "tags": {
      "info": "Hi best model"
    },
    "_creation_timestamp": "2023-08-11 13:42:09",
    "_last_updated_timestamp": "2023-12-19 00:26:21",
    "_is_unity_catalog": true,
    "_web_ui_link": "https://e2-demo-west.cloud.databricks.com/explore/data/models/andre.ml_models.sklearn_wine_best",
    "_api_link": "https://e2-demo-west.cloud.databricks.com/api/2.0/mlflow/unity-catalog/registered-models/get?name=andre.ml_models.sklearn_wine_best"
  },
  "run": {
    "run": {
      "info": {
        "run_id": "417a027fa09b40c8a5e412e2d3b6a9ae",
        "run_uuid": "417a027fa09b40c8a5e412e2d3b6a9ae",
        "experiment_id": "701e00c86d4541c8a68df2874e8517f7",
        "run_name": "white 2023-12-18",
        "status": "FINISHED",
        "start_time": 1702945570995,
        "end_time": 1702945578430,
        "artifact_uri": "dbfs:/databricks/mlflow-tracking/701e00c86d4541c8a68df2874e8517f7/417a027fa09b40c8a5e412e2d3b6a9ae/artifacts",
        "lifecycle_stage": "active",
        "_start_time": "2023-12-19 00:26:11",
        "_end_time": "2023-12-19 00:26:18",
        "_duration": 7.435,
        "_experiment_name": "/Repos/andre@mycompany.com/mlflow-examples/databricks/notebooks/basic/Sklearn_Wine_UC",
        "_web_ui_link": "https://e2-demo-west.cloud.databricks.com#mlflow/experiments/701e00c86d4541c8a68df2874e8517f7/runs/417a027fa09b40c8a5e412e2d3b6a9ae",
        "_api_link": "https://e2-demo-west.cloud.databricks.com/api/2.0/mlflow/runs/get?run_id=417a027fa09b40c8a5e412e2d3b6a9ae"
      },
      "data": {
        "metrics": [
          {
            "key": "r2",
            "value": 0.1553172302194683,
            "timestamp": 1702945578356,
            "step": 0
          },
          {
            "key": "rmse",
            "value": 0.7986004372118107,
            "timestamp": 1702945578271,
            "step": 0
          }
        ],
        "params": [
          {
            "key": "max_depth",
            "value": 1
          }
        ],
        "tags": {
          "algorithm": "<class 'sklearn.tree._classes.DecisionTreeRegressor'>",
          "data_source": "andre.ml_data.winequality_white",
          "input_example": "True",
          "log_input": "True",
          "mlflow.databricks.cluster.id": "1202-013513-g3j8g3zv",
          "mlflow.databricks.cluster.info": {
            "cluster_name": "andre-llm",
            "spark_version": "14.2.x-gpu-ml-scala2.12",
            "node_type_id": "g5.xlarge",
            "driver_node_type_id": "g5.xlarge",
            "autotermination_minutes": 120,
            "disk_spec": {
              "disk_count": 0
            },
            "num_workers": 1
          },
          "mlflow.databricks.cluster.libraries.error": "This message class com.databricks.api.proto.managedLibraries.ClusterStatus DID NOT match any methods in the stub class com.databricks.api.proto.cluster.ClusterServiceGrpc$ClusterServiceBlockingStub",
          "mlflow.databricks.gitRepoCommit": "1a8e1d20b23d32ea8a1c492ffb6f784e6a699aa5",
          "mlflow.databricks.gitRepoProvider": "gitHub",
          "mlflow.databricks.gitRepoReference": "master",
          "mlflow.databricks.gitRepoReferenceType": "branch",
          "mlflow.databricks.gitRepoRelativePath": "databricks/notebooks/basic/Sklearn_Wine_UC",
          "mlflow.databricks.gitRepoStatus": "unknown",
          "mlflow.databricks.gitRepoUrl": "https://github.com/amesar/mlflow-examples",
          "mlflow.databricks.notebook.commandID": "4465154787631891762_4829481702570884641_6940311a688d49d8bada9d54ff661547",
          "mlflow.databricks.notebookID": 2520253095233459,
          "mlflow.databricks.notebookPath": "/Repos/andre@mycompany.com/mlflow-examples/databricks/notebooks/basic/Sklearn_Wine_UC",
          "mlflow.databricks.webappURL": "https://denali.staging.mycompany.com",
          "mlflow.databricks.workspaceID": 2556758628403379,
          "mlflow.databricks.workspaceURL": "e2-demo-west.cloud.databricks.com",
          "mlflow.log-model.history": [
            {
              "artifact_path": "model",
              "saved_input_example_info": {
                "artifact_path": "input_example.json",
                "type": "dataframe",
                "pandas_orient": "split"
              },
              "signature": {
                "inputs": [
                  {
                    "type": "double",
                    "name": "fixed_acidity"
                  },
                  {
                    "type": "double",
                    "name": "volatile_acidity"
                  },
                  {
                    "type": "double",
                    "name": "citric_acid"
                  },
                  {
                    "type": "double",
                    "name": "residual_sugar"
                  },
                  {
                    "type": "double",
                    "name": "chlorides"
                  },
                  {
                    "type": "double",
                    "name": "free_sulfur_dioxide"
                  },
                  {
                    "type": "double",
                    "name": "total_sulfur_dioxide"
                  },
                  {
                    "type": "double",
                    "name": "density"
                  },
                  {
                    "type": "double",
                    "name": "pH"
                  },
                  {
                    "type": "double",
                    "name": "sulphates"
                  },
                  {
                    "type": "double",
                    "name": "alcohol"
                  }
                ],
                "outputs": [
                  {
                    "type": "tensor",
                    "tensor-spec": {
                      "dtype": "float64",
                      "shape": [
                        -1
                      ]
                    }
                  }
                ],
                "params": null
              },
              "flavors": {
                "python_function": {
                  "predict_fn": "predict",
                  "model_path": "model.pkl",
                  "loader_module": "mlflow.sklearn",
                  "env": {
                    "conda": "conda.yaml",
                    "virtualenv": "python_env.yaml"
                  },
                  "python_version": "3.10.12"
                },
                "sklearn": {
                  "pickled_model": "model.pkl",
                  "sklearn_version": "1.1.1",
                  "serialization_format": "cloudpickle",
                  "code": null
                }
              },
              "run_id": "417a027fa09b40c8a5e412e2d3b6a9ae",
              "model_uuid": "46aec4f79d824046b492de49d835fd54",
              "model_size_bytes": 103958,
              "utc_time_created": "2023-12-19 00:26:14.030243",
              "mlflow_version": "2.8.0",
              "databricks_runtime": "14.2.x-gpu-ml-scala2.12"
            }
          ],
          "mlflow.runName": "white 2023-12-18",
          "mlflow.source.name": "/Repos/andre@mycompany.com/mlflow-examples/databricks/notebooks/basic/Sklearn_Wine_UC",
          "mlflow.source.type": "NOTEBOOK",
          "mlflow.user": "andre@mycompany.com",
          "run_name": "white 2023-12-18",
          "save_signature": "True",
          "sparkDatasourceInfo": [
            {
              "path": "s3://databricks-e2demofieldengwest/b169b504-4c54-49f2-bc3a-adf4b128f36d/tables/fb9f1fbf-156a-4a91-8ea3-4a8e58d7b1bf",
              "version": "0",
              "format": "delta"
            }
          ],
          "timestamp": "2023-12-19 00:25:25",
          "version.DATABRICKS_RUNTIME_VERSION": 14.2,
          "version.mlflow": "2.8.0",
          "version.python": "3.10.12",
          "version.sklearn": "1.1.1"
        }
      },
      "inputs": {
        "dataset_inputs": [
          {
            "tags": [
              {
                "key": "mlflow.data.context",
                "value": "training"
              }
            ],
            "dataset": {
              "name": "winequality_white",
              "digest": "4a361360",
              "source_type": "delta_table",
              "source": {
                "delta_table_name": "andre.ml_data.winequality_white",
                "is_databricks_uc_table": true
              },
              "schema": {
                "mlflow_colspec": [
                  {
                    "type": "double",
                    "name": "fixed_acidity"
                  },
                  {
                    "type": "double",
                    "name": "volatile_acidity"
                  },
                  {
                    "type": "double",
                    "name": "citric_acid"
                  },
                  {
                    "type": "double",
                    "name": "residual_sugar"
                  },
                  {
                    "type": "double",
                    "name": "chlorides"
                  },
                  {
                    "type": "double",
                    "name": "free_sulfur_dioxide"
                  },
                  {
                    "type": "double",
                    "name": "total_sulfur_dioxide"
                  },
                  {
                    "type": "double",
                    "name": "density"
                  },
                  {
                    "type": "double",
                    "name": "pH"
                  },
                  {
                    "type": "double",
                    "name": "sulphates"
                  },
                  {
                    "type": "double",
                    "name": "alcohol"
                  },
                  {
                    "type": "integer",
                    "name": "quality"
                  }
                ]
              },
              "profile": {
                "approx_count": 4898
              }
            }
          }
        ]
      }
    }
  },
  "experiment": {
    "experiment": {
      "experiment_id": "701e00c86d4541c8a68df2874e8517f7",
      "name": "/Repos/andre@mycompany.com/mlflow-examples/databricks/notebooks/basic/Sklearn_Wine_UC",
      "artifact_location": "dbfs:/databricks/mlflow-tracking/701e00c86d4541c8a68df2874e8517f7",
      "lifecycle_stage": "active",
      "last_update_time": 1702945570995,
      "creation_time": 1701927423160,
      "tags": {
        "mlflow.experiment.sourceType": "REPO_NOTEBOOK",
        "mlflow.ownerId": 4566812440727830,
        "mlflow.experiment.sourceName": "/Repos/andre@mycompany.com/mlflow-examples/databricks/notebooks/basic/Sklearn_Wine_UC",
        "mlflow.ownerEmail": "andre@mycompany.com",
        "mlflow.experiment.sourceId": 2520253095233459
      },
      "_creation_time": "2023-12-07 05:37:03",
      "_last_update_time": "2023-12-19 00:26:11",
      "_tracking_uri": "databricks://e2_demo",
      "_web_ui_link": "https://e2-demo-west.cloud.databricks.com#mlflow/experiments/701e00c86d4541c8a68df2874e8517f7",
      "_api_link": "https://e2-demo-west.cloud.databricks.com/api/2.0/mlflow/experiments/get?experiment_id=701e00c86d4541c8a68df2874e8517f7",
      "permissions": {
        "permission_levels": [
          {
            "permission_level": "CAN_READ",
            "description": "Can view the experiment"
          },
          {
            "permission_level": "CAN_EDIT",
            "description": "Can view, log runs, and edit the experiment"
          },
          {
            "permission_level": "CAN_MANAGE",
            "description": "Can view, log runs, edit, delete, and change permissions of the experiment"
          }
        ],
        "permissions": {
          "error": {
            "message": "Databricks permissions API call failed",
            "MlflowReportsException": {
              "http_status_code": 400,
              "uri": "https://e2-demo-west.cloud.databricks.com/api/2.0/permissions/experiments/701e00c86d4541c8a68df2874e8517f7",
              "response": {
                "error_code": "INVALID_PARAMETER_VALUE",
                "message": "For input string: \"701e00c86d4541c8a68df2874e8517f7\""
              }
            }
          }
        }
      }
    }
  }
}
